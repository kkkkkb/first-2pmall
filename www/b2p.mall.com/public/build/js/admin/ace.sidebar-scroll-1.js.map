{"version":3,"sources":["ace.sidebar-scroll-1.js"],"names":[],"mappingsfile":"ace.sidebar-scroll-1.js","sourcesContent":["/**\r\n <b>Scrollbars for sidebar</b>. This approach can <span class=\"text-danger\">only</span> be used on <u>fixed</u> sidebar.\r\n It doesn't use <u>\"overflow:hidden\"</u> CSS property and therefore can be used with <u>.hover</u> submenus and minimized sidebar.\r\n Except when in mobile view and menu toggle button is not in the navbar.\r\n*/\r\n\r\n(function($ , undefined) {\r\n\t//if( !$.fn.ace_scroll ) return;\r\n\r\n\tvar old_safari = ace.vars['safari'] && navigator.userAgent.match(/version\\/[1-5]/i)\r\n\t//NOTE\r\n\t//Safari on windows has not been updated for a long time.\r\n\t//And it has a problem when sidebar is fixed & scrollable and there is a CSS3 animation inside page content.\r\n\t//Very probably windows users of safari have migrated to another browser by now!\r\n\r\n\tvar is_element_pos =\r\n\t'getComputedStyle' in window ?\r\n\t//el.offsetHeight is used to force redraw and recalculate 'el.style.position' esp. for webkit!\r\n\tfunction(el, pos) { el.offsetHeight; return window.getComputedStyle(el).position == pos }\r\n\t:\r\n\tfunction(el, pos) { el.offsetHeight; return $(el).css('position') == pos }\r\n\t\r\n\t\t\r\n\tfunction Sidebar_Scroll(sidebar , settings) {\r\n\t\tvar self = this;\r\n\r\n\t\tvar $window = $(window);\r\n\t\t\r\n\t\tvar $sidebar = $(sidebar), $nav, nav, $toggle, $shortcuts;\r\n\t\t$nav = $sidebar.find('.nav-list');\r\n\t\tnav = $nav.get(0);\r\n\t\tif(!nav) return;\r\n\t\t\r\n\t\t\r\n\t\tvar attrib_values = ace.helper.getAttrSettings(sidebar, $.fn.ace_sidebar_scroll.defaults);\r\n\t\tthis.settings = $.extend({}, $.fn.ace_sidebar_scroll.defaults, settings, attrib_values);\r\n\t\tvar scroll_to_active = self.settings.scroll_to_active;\r\n\t\r\n\t\r\n\t\tvar ace_sidebar = $sidebar.ace_sidebar('ref');\r\n\t\t$sidebar.attr('data-sidebar-scroll', 'true');\r\n\t\t\t\r\n\t\t\r\n\t\tvar scroll_div = null,\r\n\t\t\tscroll_content = null,\r\n\t\t\tscroll_content_div = null,\r\n\t\t\tbar = null,\r\n\t\t\ttrack = null,\r\n\t\t\tace_scroll = null;\r\n\r\n\r\n\t\tthis.is_scrolling = false;\r\n\t\tvar _initiated = false;\r\n\t\tthis.sidebar_fixed = is_element_pos(sidebar, 'fixed');\r\n\t\t\r\n\t\tvar $avail_height, $content_height;\r\n\r\n\t\t\r\n\t\tvar available_height = function() {\r\n\t\t\t//available window space\r\n\t\t\tvar offset = $nav.parent().offset();//because `$nav.offset()` considers the \"scrolled top\" amount as well\r\n\t\t\tif(self.sidebar_fixed) offset.top -= ace.helper.scrollTop();\r\n\r\n\t\t\treturn $window.innerHeight() - offset.top - ( self.settings.include_toggle ? 0 : $toggle.outerHeight() ) + 1;\r\n\t\t}\r\n\t\tvar content_height = function() {\r\n\t\t\treturn nav.clientHeight;//we don't use nav.scrollHeight here, because hover submenus are considered in calculating scrollHeight despite position=absolute!\r\n\t\t}\r\n\r\n\t\t\r\n\t\t\r\n\t\tvar initiate = function(on_page_load) {\r\n\t\t\tif( _initiated ) return;\r\n\t\t\tif( !self.sidebar_fixed ) return;//eligible??\r\n\t\t\t//return if we want scrollbars only on \"fixed\" sidebar and sidebar is not \"fixed\" yet!\r\n\r\n\t\t\t\r\n\t\t\t$nav = $sidebar.find('.nav-list');\r\n\t\t\t$toggle = $sidebar.find('.sidebar-toggle').eq(0);\r\n\t\t\t$shortcuts = $sidebar.find('.sidebar-shortcuts').eq(0);\r\n\t\t\tnav = $nav.get(0);\r\n\r\n\t\t\tif(!nav) return;\r\n\t\t\t\r\n\t\t\t//initiate once\r\n\t\t\t$nav.wrap('<div class=\"nav-wrap-up pos-rel\" />');\r\n\t\t\t$nav.after('<div><div></div></div>');\r\n\r\n\t\t\t$nav.wrap('<div class=\"nav-wrap\" />');\r\n\t\t\t\r\n\t\t\tif(!self.settings.include_toggle) $toggle.css({'z-index': 1});\r\n\t\t\tif(!self.settings.include_shortcuts) $shortcuts.css({'z-index': 99});\r\n\r\n\t\t\tscroll_div = $nav.parent().next()\r\n\t\t\t.ace_scroll({\r\n\t\t\t\tsize: available_height(),\r\n\t\t\t\t//reset: true,\r\n\t\t\t\tmouseWheelLock: true,\r\n\t\t\t\thoverReset: false,\r\n\t\t\t\tdragEvent: true,\r\n\t\t\t\tstyleClass: self.settings.scroll_style,\r\n\t\t\t\ttouchDrag: false//disable touch drag event on scrollbars, we'll add a custom one later\r\n\t\t\t})\r\n\t\t\t.closest('.ace-scroll').addClass('nav-scroll');\r\n\t\t\t\r\n\t\t\tace_scroll = scroll_div.data('ace_scroll');\r\n\r\n\t\t\tscroll_content = scroll_div.find('.scroll-content').eq(0);\r\n\t\t\tscroll_content_div = scroll_content.find(' > div').eq(0);\r\n\t\t\t\r\n\t\t\ttrack = $(ace_scroll.get_track());\r\n\t\t\tbar = track.find('.scroll-bar').eq(0);\r\n\r\n\t\t\tif(self.settings.include_shortcuts && $shortcuts.length != 0) {\r\n\t\t\t\t$nav.parent().prepend($shortcuts).wrapInner('<div />');\r\n\t\t\t\t$nav = $nav.parent();\r\n\t\t\t}\r\n\t\t\tif(self.settings.include_toggle && $toggle.length != 0) {\r\n\t\t\t\t$nav.append($toggle);\r\n\t\t\t\t$nav.closest('.nav-wrap').addClass('nav-wrap-t');//it just helps to remove toggle button's top border and restore li:last-child's bottom border\r\n\t\t\t}\r\n\r\n\t\t\t$nav.css({position: 'relative'});\r\n\t\t\tif( self.settings.scroll_outside == true ) scroll_div.addClass('scrollout');\r\n\t\t\t\r\n\t\t\tnav = $nav.get(0);\r\n\t\t\tnav.style.top = 0;\r\n\t\t\tscroll_content.on('scroll.nav', function() {\r\n\t\t\t\tnav.style.top = (-1 * this.scrollTop) + 'px';\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t//mousewheel library available?\r\n\t\t\t$nav.on(!!$.event.special.mousewheel ? 'mousewheel.ace_scroll' : 'mousewheel.ace_scroll DOMMouseScroll.ace_scroll', function(event){\r\n\t\t\t\tif( !self.is_scrolling || !ace_scroll.is_active() ) {\r\n\t\t\t\t\treturn !self.settings.lock_anyway;\r\n\t\t\t\t}\r\n\t\t\t\t//transfer $nav's mousewheel event to scrollbars\r\n\t\t\t\treturn scroll_div.trigger(event);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\t$nav.on('mouseenter.ace_scroll', function() {\r\n\t\t\t\ttrack.addClass('scroll-hover');\r\n\t\t\t}).on('mouseleave.ace_scroll', function() {\r\n\t\t\t\ttrack.removeClass('scroll-hover');\r\n\t\t\t});\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t$(document.body).on('touchmove.nav', function(event) {\r\n\t\t\t\tif( self.is_scrolling && $.contains(sidebar, event.target) ) {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t*/\r\n\r\n\t\t\t//you can also use swipe event in a similar way //swipe.nav\r\n\t\t\tvar content = scroll_content.get(0);\r\n\t\t\t$nav.on('ace_drag.nav', function(event) {\r\n\t\t\t\tif( !self.is_scrolling || !ace_scroll.is_active() ) {\r\n\t\t\t\t\tevent.retval.cancel = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//if submenu hover is being scrolled let's cancel sidebar scroll!\r\n\t\t\t\tif( $(event.target).closest('.can-scroll').length != 0 ) {\r\n\t\t\t\t\tevent.retval.cancel = true;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(event.direction == 'up' || event.direction == 'down') {\r\n\t\t\t\t\t\r\n\t\t\t\t\tace_scroll.move_bar(true);\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar distance = event.dy;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdistance = parseInt(Math.min($avail_height, distance))\r\n\t\t\t\t\tif(Math.abs(distance) > 2) distance = distance * 2;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(distance != 0) {\r\n\t\t\t\t\t\tcontent.scrollTop = content.scrollTop + distance;\r\n\t\t\t\t\t\tnav.style.top = (-1 * content.scrollTop) + 'px';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\r\n\t\t\t//for drag only\r\n\t\t\tif(self.settings.smooth_scroll) {\r\n\t\t\t\t$nav\r\n\t\t\t\t.on('touchstart.nav MSPointerDown.nav pointerdown.nav', function(event) {\r\n\t\t\t\t\t$nav.css('transition-property', 'none');\r\n\t\t\t\t\tbar.css('transition-property', 'none');\r\n\t\t\t\t})\r\n\t\t\t\t.on('touchend.nav touchcancel.nav MSPointerUp.nav MSPointerCancel.nav pointerup.nav pointercancel.nav', function(event) {\r\n\t\t\t\t\t$nav.css('transition-property', 'top');\r\n\t\t\t\t\tbar.css('transition-property', 'top');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\r\n\t\t\tif(old_safari && !self.settings.include_toggle) {\r\n\t\t\t\tvar toggle = $toggle.get(0);\r\n\t\t\t\tif(toggle) scroll_content.on('scroll.safari', function() {\r\n\t\t\t\t\tace.helper.redraw(toggle);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t_initiated = true;\r\n\r\n\t\t\t//if the active item is not visible, scroll down so that it becomes visible\r\n\t\t\t//only the first time, on page load\r\n\t\t\tif(on_page_load == true) {\r\n\t\t\t\tself.reset();//try resetting at first\r\n\r\n\t\t\t\tif( scroll_to_active ) {\r\n\t\t\t\t\tself.scroll_to_active();\r\n\t\t\t\t}\r\n\t\t\t\tscroll_to_active = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif( typeof self.settings.smooth_scroll === 'number' && self.settings.smooth_scroll > 0) {\r\n\t\t\t\t$nav.css({'transition-property': 'top', 'transition-duration': (self.settings.smooth_scroll / 1000).toFixed(2)+'s'})\r\n\t\t\t\tbar.css({'transition-property': 'top', 'transition-duration': (self.settings.smooth_scroll / 1500).toFixed(2)+'s'})\r\n\t\t\t\t\r\n\t\t\t\tscroll_div\r\n\t\t\t\t.on('drag.start', function(e) {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t$nav.css('transition-property', 'none')\r\n\t\t\t\t})\r\n\t\t\t\t.on('drag.end', function(e) {\r\n\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t$nav.css('transition-property', 'top')\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(ace.vars['android']) {\r\n\t\t\t\t//force hide address bar, because its changes don't trigger window resize and become kinda ugly\r\n\t\t\t\tvar val = ace.helper.scrollTop();\r\n\t\t\t\tif(val < 2) {\r\n\t\t\t\t\twindow.scrollTo( val, 0 );\r\n\t\t\t\t\tsetTimeout( function() {\r\n\t\t\t\t\t\tself.reset();\r\n\t\t\t\t\t}, 20 );\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar last_height = ace.helper.winHeight() , new_height;\r\n\t\t\t\t$(window).on('scroll.ace_scroll', function() {\r\n\t\t\t\t\tif(self.is_scrolling && ace_scroll.is_active()) {\r\n\t\t\t\t\t\tnew_height = ace.helper.winHeight();\r\n\t\t\t\t\t\tif(new_height != last_height) {\r\n\t\t\t\t\t\t\tlast_height = new_height;\r\n\t\t\t\t\t\t\tself.reset();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tthis.scroll_to_active = function() {\r\n\t\t\tif( !ace_scroll || !ace_scroll.is_active() ) return;\r\n\t\t\ttry {\r\n\t\t\t\t//sometimes there's no active item or not 'offsetTop' property\r\n\t\t\t\tvar $active;\r\n\t\t\t\t\r\n\t\t\t\tvar vars = ace_sidebar['vars']()\r\n\r\n\t\t\t\tvar nav_list = $sidebar.find('.nav-list')\r\n\t\t\t\tif(vars['minimized'] && !vars['collapsible']) {\r\n\t\t\t\t\t$active = nav_list.find('> .active')\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t$active = $nav.find('> .active.hover')\r\n\t\t\t\t\tif($active.length == 0)\t$active = $nav.find('.active:not(.open)')\r\n\t\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\t\tvar top = $active.outerHeight();\r\n\t\t\t\tnav_list = nav_list.get(0);\r\n\t\t\t\tvar active = $active.get(0);\r\n\t\t\t\twhile(active != nav_list) {\r\n\t\t\t\t\ttop += active.offsetTop;\r\n\t\t\t\t\tactive = active.parentNode;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar scroll_amount = top - scroll_div.height();\r\n\t\t\t\tif(scroll_amount > 0) {\r\n\t\t\t\t\tnav.style.top = -scroll_amount + 'px';\r\n\t\t\t\t\tscroll_content.scrollTop(scroll_amount);\r\n\t\t\t\t}\r\n\t\t\t}catch(e){}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tthis.reset = function(recalc) {\r\n\t\t\tif(recalc === true) {\r\n\t\t\t\tthis.sidebar_fixed = is_element_pos(sidebar, 'fixed');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif( !this.sidebar_fixed ) {\r\n\t\t\t\tthis.disable();\r\n\t\t\t\treturn;//eligible??\r\n\t\t\t}\r\n\r\n\t\t\t//return if we want scrollbars only on \"fixed\" sidebar and sidebar is not \"fixed\" yet!\r\n\r\n\t\t\tif( !_initiated ) initiate();\r\n\t\t\t//initiate scrollbars if not yet\r\n\t\t\t\r\n\t\t\tvar vars = ace_sidebar['vars']();\r\n\t\t\t\r\n\r\n\t\t\t//enable if:\r\n\t\t\t//menu is not collapsible mode (responsive navbar-collapse mode which has default browser scrollbar)\r\n\t\t\t//menu is not horizontal or horizontal but mobile view (which is not navbar-collapse)\r\n\t\t\t//and available height is less than nav's height\r\n\t\t\t\r\n\r\n\t\t\tvar enable_scroll = !vars['collapsible'] && !vars['horizontal']\r\n\t\t\t\t\t\t\t\t&& ($avail_height = available_height()) < ($content_height = nav.clientHeight);\r\n\t\t\t\t\t\t\t\t//we don't use nav.scrollHeight here, because hover submenus are considered in calculating scrollHeight despite position=absolute!\r\n\r\n\t\t\t\t\t\t\t\t\r\n\t\t\tthis.is_scrolling = true;\r\n\t\t\tif( enable_scroll ) {\r\n\t\t\t\tscroll_content_div.css({height: $content_height, width: 8});\r\n\t\t\t\tscroll_div.prev().css({'max-height' : $avail_height})\r\n\t\t\t\tace_scroll.update({size: $avail_height})\r\n\t\t\t\tace_scroll.enable();\r\n\t\t\t\tace_scroll.reset();\r\n\t\t\t}\r\n\t\t\tif( !enable_scroll || !ace_scroll.is_active() ) {\r\n\t\t\t\tif(this.is_scrolling) this.disable();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$sidebar.addClass('sidebar-scroll');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//return this.is_scrolling;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tthis.disable = function() {\r\n\t\t\tthis.is_scrolling = false;\r\n\t\t\tif(scroll_div) {\r\n\t\t\t\tscroll_div.css({'height' : '', 'max-height' : ''});\r\n\t\t\t\tscroll_content_div.css({height: '', width: ''});//otherwise it will have height and takes up some space even when invisible\r\n\t\t\t\tscroll_div.prev().css({'max-height' : ''})\r\n\t\t\t\tace_scroll.disable();\r\n\t\t\t}\r\n\r\n\t\t\tif(parseInt(nav.style.top) < 0 && self.settings.smooth_scroll && $.support.transition.end) {\r\n\t\t\t\t$nav.one($.support.transition.end, function() {\r\n\t\t\t\t\t$sidebar.removeClass('sidebar-scroll');\r\n\t\t\t\t\t$nav.off('.trans');\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t$sidebar.removeClass('sidebar-scroll');\r\n\t\t\t}\r\n\r\n\t\t\tnav.style.top = 0;\r\n\t\t}\r\n\t\t\r\n\t\tthis.prehide = function(height_change) {\r\n\t\t\tif(!this.is_scrolling || ace_sidebar.get('minimized')) return;//when minimized submenu's toggle should have no effect\r\n\t\t\t\r\n\t\t\tif(content_height() + height_change < available_height()) {\r\n\t\t\t\tthis.disable();\r\n\t\t\t}\r\n\t\t\telse if(height_change < 0) {\r\n\t\t\t\t//if content height is decreasing\r\n\t\t\t\t//let's move nav down while a submenu is being hidden\r\n\t\t\t\tvar scroll_top = scroll_content.scrollTop() + height_change\r\n\t\t\t\tif(scroll_top < 0) return;\r\n\r\n\t\t\t\tnav.style.top = (-1 * scroll_top) + 'px';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tthis._reset = function(recalc) {\r\n\t\t\tif(recalc === true) {\r\n\t\t\t\tthis.sidebar_fixed = is_element_pos(sidebar, 'fixed');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(ace.vars['webkit']) \r\n\t\t\t\tsetTimeout(function() { self.reset() } , 0);\r\n\t\t\telse this.reset();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tthis.set_hover = function() {\r\n\t\t\tif(track) track.addClass('scroll-hover');\r\n\t\t}\r\n\t\t\r\n\t\tthis.get = function(name) {\r\n\t\t\tif(this.hasOwnProperty(name)) return this[name];\r\n\t\t}\r\n\t\tthis.set = function(name, value) {\r\n\t\t\tif(this.hasOwnProperty(name)) this[name] = value;\r\n\t\t}\r\n\t\tthis.ref = function() {\r\n\t\t\t//return a reference to self\r\n\t\t\treturn this;\r\n\t\t}\r\n\t\t\r\n\t\tthis.updateStyle = function(styleClass) {\r\n\t\t\tif(ace_scroll == null) return;\r\n\t\t\tace_scroll.update({styleClass: styleClass});\r\n\t\t}\r\n\r\n\t\t\r\n\t\t//change scrollbar size after a submenu is hidden/shown\r\n\t\t//but don't change if sidebar is minimized\r\n\t\t$sidebar.on('hidden.ace.submenu.sidebar_scroll shown.ace.submenu.sidebar_scroll', '.submenu', function(e) {\r\n\t\t\te.stopPropagation();\r\n\r\n\t\t\tif( !ace_sidebar.get('minimized') ) {\r\n\t\t\t\t//webkit has a little bit of a glitch!!!\r\n\t\t\t\tself._reset();\r\n\t\t\t\tif( e.type == 'shown' ) self.set_hover();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t\r\n\t\tinitiate(true);//true = on_page_load\r\n\t}\r\n\t\r\n\r\n\t\r\n\t//reset on document and window changes\r\n\t$(document).on('settings.ace.sidebar_scroll', function(ev, event_name, event_val){\r\n\t\t$('.sidebar[data-sidebar-scroll=true]').each(function() {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar sidebar_scroll = $this.ace_sidebar_scroll('ref');\r\n\r\n\t\t\tif( event_name == 'sidebar_collapsed' && is_element_pos(this, 'fixed') ) {\r\n\t\t\t\tif( $this.attr('data-sidebar-hover') == 'true' ) $this.ace_sidebar_hover('reset');\r\n\t\t\t\tsidebar_scroll._reset();\r\n\t\t\t}\r\n\t\t\telse if( event_name === 'sidebar_fixed' || event_name === 'navbar_fixed' ) {\r\n\t\t\t\tvar is_scrolling = sidebar_scroll.get('is_scrolling');\r\n\t\t\t\tvar sidebar_fixed = is_element_pos(this, 'fixed')\r\n\t\t\t\tsidebar_scroll.set('sidebar_fixed', sidebar_fixed);\r\n\r\n\t\t\t\tif(sidebar_fixed && !is_scrolling) {\r\n\t\t\t\t\tsidebar_scroll._reset();\r\n\t\t\t\t}\r\n\t\t\t\telse if( !sidebar_fixed ) {\r\n\t\t\t\t\tsidebar_scroll.disable();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\r\n\t\t});\r\n\t});\r\n\t\r\n\t$(window).on('resize.ace.sidebar_scroll', function(){\r\n\t\t$('.sidebar[data-sidebar-scroll=true]').each(function() {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tif( $this.attr('data-sidebar-hover') == 'true' ) $this.ace_sidebar_hover('reset');\r\n\t\t\t/////////////\r\n\t\t\tvar sidebar_scroll = $(this).ace_sidebar_scroll('ref');\r\n\t\t\t\r\n\t\t\tvar sidebar_fixed = is_element_pos(this, 'fixed')\r\n\t\t\tsidebar_scroll.set('sidebar_fixed', sidebar_fixed);\r\n\t\t\tsidebar_scroll._reset();\r\n\t\t});\r\n\t})\r\n\t\r\n\r\n\t\r\n\t\r\n\t /////////////////////////////////////////////\r\n\t if(!$.fn.ace_sidebar_scroll) {\r\n\t  \r\n\t  $.fn.ace_sidebar_scroll = function (option, value) {\r\n\t\tvar method_call;\r\n\r\n\t\tvar $set = this.each(function () {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar data = $this.data('ace_sidebar_scroll');\r\n\t\t\tvar options = typeof option === 'object' && option;\r\n\r\n\t\t\tif (!data) $this.data('ace_sidebar_scroll', (data = new Sidebar_Scroll(this, options)));\r\n\t\t\tif (typeof option === 'string' && typeof data[option] === 'function') {\r\n\t\t\t\tmethod_call = data[option](value);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (method_call === undefined) ? $set : method_call;\r\n\t }\r\n\t \r\n\t \r\n\t $.fn.ace_sidebar_scroll.defaults = {\r\n\t\t'scroll_to_active': true,\r\n\t\t'include_shortcuts': true,\r\n\t\t'include_toggle': false,\r\n\t\t'smooth_scroll': 150,\r\n\t\t'scroll_outside': false,\r\n\t\t'scroll_style': '',\r\n\t\t'lock_anyway': false\r\n     }\r\n\t \r\n\t}\r\n\r\n})(window.jQuery);"],"sourceRoot":"/source/"}