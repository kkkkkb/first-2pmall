!function(e){"function"==typeof define&&define.amd?define(["jquery"],e):"object"==typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(e){function t(e,t,n){t.addClass("tree-selected"),"item"===t.data("type")&&n.hasClass(e.options["unselected-icon"])&&n.removeClass(e.options["unselected-icon"]).addClass(e.options["selected-icon"])}function n(e,t,n){t.removeClass("tree-selected"),"item"===t.data("type")&&n.hasClass(e.options["selected-icon"])&&n.removeClass(e.options["selected-icon"]).addClass(e.options["unselected-icon"])}function s(s,i,r){e.each(r.$elements,function(t,n){var s=e(n);s[0]!==i.$element[0]&&r.dataForEvent.push(e(s).data())}),i.$element.hasClass("tree-selected")?(n(s,i.$element,i.$icon),r.eventType="deselected"):(t(s,i.$element,i.$icon),r.eventType="selected",r.dataForEvent.push(i.elementData))}function i(e,s,i){if(i.$elements[0]!==s.$element[0]){e.deselectAll(e.$element);t(e,s.$element,s.$icon),i.eventType="selected",i.dataForEvent=[s.elementData]}else n(e,s.$element,s.$icon),i.eventType="deselected",i.dataForEvent=[]}var r=e.fn.tree,o=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.tree.defaults,n),this.options.itemSelect&&this.$element.on("click.fu.tree",".tree-item",e.proxy(function(e){this.selectItem(e.currentTarget)},this)),this.$element.on("click.fu.tree",".tree-branch-header",e.proxy(function(e){this.options.folderSelect||this.toggleFolder(e.currentTarget)},this)),this.$element.on("click.fu.tree",".tree-overflow",e.proxy(function(t){this.populate(e(t.currentTarget))},this)),this.options.folderSelect&&(this.$element.addClass("tree-folder-select"),this.$element.off("click.fu.tree",".tree-branch-name"),this.$element.on("click.fu.tree",".icon-caret",e.proxy(function(t){this.toggleFolder(e(t.currentTarget).next())},this)),this.$element.on("click.fu.tree",".tree-branch-header",e.proxy(function(t){this.selectFolder(e(t.currentTarget))},this))),this.render()};o.prototype={constructor:o,deselectAll:function(t){t=t||this.$element;var s=e(t).find(".tree-selected"),i=this;return s.each(function(t,s){n(i,e(s),e(s).find("."+e.trim(i.options["base-icon"]).replace(/(\s+)/g,".")))}),s},destroy:function(){return this.$element.find("li:not([data-template])").remove(),this.$element.remove(),this.$element[0].outerHTML},render:function(){this.populate(this.$element)},populate:function(t,n){var s=this,i=t.hasClass("tree-overflow"),r=t.hasClass("tree")?t:t.parent(),o=r.hasClass("tree");i&&!o&&(r=r.parent());var l=r.data();i&&(l.overflow=t.data()),n=n||!1,i&&(o?t.replaceWith(r.find("> .tree-loader").remove()):t.remove());var a=r.find(".tree-loader:last");n===!1&&a.removeClass("hide hidden"),this.options.dataSource(l?l:{},function(t){e.each(t.data,function(t,n){var i;if("folder"===n.type){i=s.$element.find("[data-template=treebranch]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),i.data(n),i.find(".tree-branch-name > .tree-label").html(n.text||n.name);var l=i.find(".tree-branch-header");"icon-class"in n&&l.find("i").addClass(n["icon-class"]),"additionalParameters"in n&&"item-selected"in n.additionalParameters&&1==n.additionalParameters["item-selected"]&&setTimeout(function(){l.trigger("click")},0)}else"item"===n.type?(i=s.$element.find("[data-template=treeitem]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),i.find(".tree-item-name > .tree-label").html(n.text||n.name),i.data(n),"additionalParameters"in n&&"item-selected"in n.additionalParameters&&1==n.additionalParameters["item-selected"]&&(i.addClass("tree-selected"),i.find("i").removeClass(s.options["unselected-icon"]).addClass(s.options["selected-icon"]))):"overflow"===n.type&&(i=s.$element.find("[data-template=treeoverflow]:eq(0)").clone().removeClass("hide hidden").removeData("template").removeAttr("data-template"),i.find(".tree-overflow-name > .tree-label").html(n.text||n.name),i.data(n));var a=n.attr||n.dataAttributes||[];e.each(a,function(e,t){switch(e){case"cssClass":case"class":case"className":i.addClass(t);break;case"data-icon":i.find(".icon-item").removeClass().addClass("icon-item "+t),i.attr(e,t);break;case"id":i.attr(e,t),i.attr("aria-labelledby",t+"-label"),i.find(".tree-branch-name > .tree-label").attr("id",t+"-label");break;default:i.attr(e,t)}}),o?r.append(i):r.find(".tree-branch-children:eq(0)").append(i)}),r.find(".tree-loader").addClass("hidden"),s.$element.trigger("loaded.fu.tree",r)})},selectTreeNode:function(t,n){var r={};r.$element=e(t);var o={};o.$elements=this.$element.find(".tree-selected"),o.dataForEvent=[],"folder"===n?(r.$element=r.$element.closest(".tree-branch"),r.$icon=r.$element.find(".icon-folder")):r.$icon=r.$element.find(".icon-item"),r.elementData=r.$element.data(),this.options.multiSelect?s(this,r,o):i(this,r,o),this.$element.trigger(o.eventType+".fu.tree",{target:r.elementData,selected:o.dataForEvent}),r.$element.trigger("updated.fu.tree",{selected:o.dataForEvent,item:r.$element,eventType:o.eventType})},discloseFolder:function(t){var n=e(t),s=n.closest(".tree-branch"),i=s.find(".tree-branch-children"),r=i.eq(0);s.addClass("tree-open"),s.attr("aria-expanded","true"),r.removeClass("hide hidden"),s.find("> .tree-branch-header .icon-folder").eq(0).removeClass(this.options["close-icon"]).addClass(this.options["open-icon"]),s.find("> .icon-caret").eq(0).removeClass(this.options["folder-open-icon"]).addClass(this.options["folder-close-icon"]),i.children().length||this.populate(i),this.$element.trigger("disclosedFolder.fu.tree",s.data())},closeFolder:function(t){var n=e(t),s=n.closest(".tree-branch"),i=s.find(".tree-branch-children"),r=i.eq(0);s.removeClass("tree-open"),s.attr("aria-expanded","false"),r.addClass("hidden"),s.find("> .tree-branch-header .icon-folder").eq(0).removeClass(this.options["open-icon"]).addClass(this.options["close-icon"]),s.find("> .icon-caret").eq(0).removeClass(this.options["folder-close-icon"]).addClass(this.options["folder-open-icon"]),this.options.cacheItems||r.empty(),this.$element.trigger("closed.fu.tree",s.data())},toggleFolder:function(t){var n=e(t);n.find("."+e.trim(this.options["close-icon"]).replace(/(\s+)/g,".")).length?this.discloseFolder(t):n.find("."+e.trim(this.options["open-icon"]).replace(/(\s+)/g,".")).length&&this.closeFolder(t)},selectFolder:function(e){this.options.folderSelect&&this.selectTreeNode(e,"folder")},selectItem:function(e){this.options.itemSelect&&this.selectTreeNode(e,"item")},selectedItems:function(){var t=this.$element.find(".tree-selected"),n=[];return e.each(t,function(t,s){n.push(e(s).data())}),n},collapse:function(){var e=this,t=[],n=function s(n,i){t.push(i),0===e.$element.find(".tree-branch.tree-open:not('.hidden, .hide')").length&&(e.$element.trigger("closedAll.fu.tree",{tree:e.$element,reportedClosed:t}),e.$element.off("loaded.fu.tree",e.$element,s))};e.$element.on("closed.fu.tree",n),e.$element.find(".tree-branch.tree-open:not('.hidden, .hide')").each(function(){e.closeFolder(this)})},discloseVisible:function(){var t=this,n=t.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')"),s=[],i=function r(e,i){s.push(i),s.length===n.length&&(t.$element.trigger("disclosedVisible.fu.tree",{tree:t.$element,reportedOpened:s}),t.$element.off("loaded.fu.tree",t.$element,r))};t.$element.on("loaded.fu.tree",i),t.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')").each(function(){t.discloseFolder(e(this).find(".tree-branch-header"))})},discloseAll:function(){var e=this;"undefined"==typeof e.$element.data("disclosures")&&e.$element.data("disclosures",0);var t=e.options.disclosuresUpperLimit>=1&&e.$element.data("disclosures")>=e.options.disclosuresUpperLimit,n=0===e.$element.find(".tree-branch:not('.tree-open, .hidden, .hide')").length;if(n)e.$element.trigger("disclosedAll.fu.tree",{tree:e.$element,disclosures:e.$element.data("disclosures")}),e.options.cacheItems||e.$element.one("closeAll.fu.tree",function(){e.$element.data("disclosures",0)});else{if(t&&(e.$element.trigger("exceededDisclosuresLimit.fu.tree",{tree:e.$element,disclosures:e.$element.data("disclosures")}),!e.$element.data("ignore-disclosures-limit")))return;e.$element.data("disclosures",e.$element.data("disclosures")+1),e.$element.one("disclosedVisible.fu.tree",function(){e.discloseAll()}),e.discloseVisible()}},refreshFolder:function(e){var t=e.closest(".tree-branch"),n=t.find(".tree-branch-children");n.eq(0).empty(),t.hasClass("tree-open")?this.populate(n,!1):this.populate(n,!0),this.$element.trigger("refreshedFolder.fu.tree",t.data())}},o.prototype.closeAll=o.prototype.collapse,o.prototype.openFolder=o.prototype.discloseFolder,o.prototype.getValue=o.prototype.selectedItems,e.fn.tree=function(t){var n,s=Array.prototype.slice.call(arguments,1),i=this.each(function(){var i=e(this),r=i.data("fu.tree"),l="object"==typeof t&&t;r||i.data("fu.tree",r=new o(this,l)),"string"==typeof t&&(n=r[t].apply(r,s))});return void 0===n?i:n},e.fn.tree.defaults={dataSource:function(e,t){},multiSelect:!1,cacheItems:!0,folderSelect:!0,itemSelect:!0,disclosuresUpperLimit:0},e.fn.tree.Constructor=o,e.fn.tree.noConflict=function(){return e.fn.tree=r,this}});