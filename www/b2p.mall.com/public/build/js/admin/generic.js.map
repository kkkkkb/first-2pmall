{"version":3,"sources":["generic.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"generic.js","sourcesContent":["/**\r\n * Generic language patterns\r\n *\r\n * @author Craig Campbell\r\n * @version 1.0.13\r\n */\r\nRainbow.extend([\r\n    {\r\n        'matches': {\r\n            1: [\r\n                {\r\n                    'name': 'keyword.operator',\r\n                    'pattern': /\\=|\\+/g\r\n                },\r\n                {\r\n                    'name': 'keyword.dot',\r\n                    'pattern': /\\./g\r\n                }\r\n            ],\r\n            2: {\r\n                'name': 'string',\r\n                'matches': {\r\n                    'name': 'constant.character.escape',\r\n                    'pattern': /\\\\('|\"){1}/g\r\n                }\r\n            }\r\n        },\r\n        'pattern': /(\\(|\\s|\\[|\\=|:|\\+|\\.|\\{)(('|\")([^\\\\\\1]|\\\\.)*?(\\3))/gm\r\n    },\r\n    {\r\n        'name': 'comment',\r\n        'pattern': /\\/\\*[\\s\\S]*?\\*\\/|(\\/\\/|\\#)[\\s\\S]*?$/gm\r\n    },\r\n    {\r\n        'name': 'constant.numeric',\r\n        'pattern': /\\b(\\d+(\\.\\d+)?(e(\\+|\\-)?\\d+)?(f|d)?|0x[\\da-f]+)\\b/gi\r\n    },\r\n    {\r\n        'matches': {\r\n            1: 'keyword'\r\n        },\r\n        'pattern': /\\b(and|array|as|b(ool(ean)?|reak)|c(ase|atch|har|lass|on(st|tinue))|d(ef|elete|o(uble)?)|e(cho|lse(if)?|xit|xtends|xcept)|f(inally|loat|or(each)?|unction)|global|if|import|int(eger)?|long|new|object|or|pr(int|ivate|otected)|public|return|self|st(ring|ruct|atic)|switch|th(en|is|row)|try|(un)?signed|var|void|while)(?=\\(|\\b)/gi\r\n    },\r\n    {\r\n        'name': 'constant.language',\r\n        'pattern': /true|false|null/g\r\n    },\r\n    {\r\n        'name': 'keyword.operator',\r\n        'pattern': /\\+|\\!|\\-|&(gt|lt|amp);|\\||\\*|\\=/g\r\n    },\r\n    {\r\n        'matches': {\r\n            1: 'function.call'\r\n        },\r\n        'pattern': /(\\w+?)(?=\\()/g\r\n    },\r\n    {\r\n        'matches': {\r\n            1: 'storage.function',\r\n            2: 'entity.name.function'\r\n        },\r\n        'pattern': /(function)\\s(.*?)(?=\\()/g\r\n    }\r\n]);\r\n"],"sourceRoot":"/source/"}