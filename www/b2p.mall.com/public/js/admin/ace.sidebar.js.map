{"version":3,"sources":["ace.sidebar.js"],"names":[],"mappingsfile":"ace.sidebar.js","sourcesContent":["/**\r\n <b>Sidebar functions</b>. Collapsing/expanding, toggling mobile view menu and other sidebar functions.\r\n*/\r\n\r\n(function($ , undefined) {\r\n\tvar sidebar_count = 0;\r\n\r\n\tfunction Sidebar(sidebar, settings) {\r\n\t\tvar self = this;\r\n\t\tthis.$sidebar = $(sidebar);\r\n\t\tthis.$sidebar.attr('data-sidebar', 'true');\r\n\t\tif( !this.$sidebar.attr('id') ) this.$sidebar.attr( 'id' , 'id-sidebar-'+(++sidebar_count) )\r\n\r\n\t\t\r\n\t\t//get a list of 'data-*' attributes that override 'defaults' and 'settings'\r\n\t\tvar attrib_values = ace.helper.getAttrSettings(sidebar, $.fn.ace_sidebar.defaults, 'sidebar-');\r\n\t\tthis.settings = $.extend({}, $.fn.ace_sidebar.defaults, settings, attrib_values);\r\n\r\n\r\n\t\t//some vars\r\n\t\tthis.minimized = false;//will be initialized later\r\n\t\tthis.collapsible = false;//...\r\n\t\tthis.horizontal = false;//...\r\n\t\tthis.mobile_view = false;//\r\n\r\n\r\n\t\t//return an array containing sidebar state variables\r\n\t\tthis.vars = function() {\r\n\t\t\treturn {'minimized': this.minimized, 'collapsible': this.collapsible, 'horizontal': this.horizontal, 'mobile_view': this.mobile_view}\r\n\t\t}\r\n\t\tthis.get = function(name) {\r\n\t\t\tif(this.hasOwnProperty(name)) return this[name];\r\n\t\t}\r\n\t\tthis.set = function(name, value) {\r\n\t\t\tif(this.hasOwnProperty(name)) this[name] = value;\r\n\t\t}\r\n\t\t\r\n\r\n\t\t//return a reference to self (sidebar instance)\r\n\t\tthis.ref = function() {\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t\r\n\t\t//toggle icon for sidebar collapse/expand button\r\n\t\tvar toggleIcon = function(minimized, save) {\r\n\t\t\tvar icon = $(this).find(ace.vars['.icon']), icon1, icon2;\r\n\t\t\tif(icon.length > 0) {\r\n\t\t\t\ticon1 = icon.attr('data-icon1');//the icon for expanded state\r\n\t\t\t\ticon2 = icon.attr('data-icon2');//the icon for collapsed state\r\n\r\n\t\t\t\tif(typeof minimized !== \"undefined\") {\r\n\t\t\t\t\tif(minimized) icon.removeClass(icon1).addClass(icon2);\r\n\t\t\t\t\telse icon.removeClass(icon2).addClass(icon1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ticon.toggleClass(icon1).toggleClass(icon2);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(save !== false) ace.settings.saveState(icon.get(0));\r\n\t\t\t\t} catch(e) {}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//if not specified, find the toggle button related to this sidebar\r\n\t\tvar findToggleBtn = function() {\r\n\t\t\tvar toggle_btn = self.$sidebar.find('.sidebar-collapse');\r\n\t\t\tif(toggle_btn.length == 0) toggle_btn = $('.sidebar-collapse[data-target=\"#'+(self.$sidebar.attr('id')||'')+'\"]');\r\n\t\t\tif(toggle_btn.length != 0) toggle_btn = toggle_btn[0];\r\n\t\t\telse toggle_btn = null;\r\n\t\t\t\r\n\t\t\treturn toggle_btn;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//collapse/expand sidebar\r\n\t\tthis.toggleMenu = function(toggle_btn, save) {\r\n\t\t\tif(this.collapsible) return false;\r\n\r\n\t\t\tthis.minimized = !this.minimized;\r\n\t\t\tvar save = !(toggle_btn === false || save === false);\r\n\t\t\t\r\n\t\t\r\n\t\t\tif(this.minimized) this.$sidebar.addClass('menu-min');\r\n\t\t\telse this.$sidebar.removeClass('menu-min');\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif(save) ace.settings.saveState(sidebar, 'class', 'menu-min', this.minimized);\r\n\t\t\t} catch(e) {}\r\n\t\t\r\n\t\t\tif( !toggle_btn ) {\r\n\t\t\t\ttoggle_btn = findToggleBtn();\r\n\t\t\t}\r\n\t\t\tif(toggle_btn) {\r\n\t\t\t\ttoggleIcon.call(toggle_btn, this.minimized, save);\r\n\t\t\t}\r\n\r\n\t\t\t//force redraw for ie8\r\n\t\t\tif(ace.vars['old_ie']) ace.helper.redraw(sidebar);\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t$(document).trigger('settings.ace', ['sidebar_collapsed' , this.minimized, sidebar, save]);\r\n\t\t\t\r\n\t\t\tif( this.minimized ) this.$sidebar.trigger($.Event('collapse.ace.sidebar'));\r\n\t\t\telse this.$sidebar.trigger($.Event('expand.ace.sidebar'));\r\n\t\t\t\r\n\t\t\t\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis.collapse = function(toggle_btn, save) {\r\n\t\t\tif(this.collapsible) return;\r\n\t\t\t\r\n\t\t\tthis.minimized = false;\r\n\t\t\tthis.toggleMenu(toggle_btn, save) \r\n\t\t}\r\n\t\tthis.expand = function(toggle_btn, save) {\r\n\t\t\tif(this.collapsible) return;\r\n\t\t\t\r\n\t\t\tthis.minimized = true;\r\n\t\t\tthis.toggleMenu(toggle_btn, save);\r\n\t\t}\r\n\t\t\r\n\r\n\t\t\r\n\t\tthis.showResponsive = function() {\r\n\t\t\tthis.$sidebar.removeClass(responsive_min_class).removeClass(responsive_max_class);\r\n\t\t}\r\n\t\t\r\n\t\t//collapse/expand in 2nd mobile style\r\n\t\tthis.toggleResponsive = function(toggle_btn, showMenu) {\r\n\t\t\tif( !this.mobile_view || this.mobile_style != 3 ) return;\r\n\t\t\r\n\t\t\tif( this.$sidebar.hasClass('menu-min') ) {\r\n\t\t\t\t//remove menu-min because it interferes with responsive-max\r\n\t\t\t\tthis.$sidebar.removeClass('menu-min');\r\n\t\t\t\tvar btn = findToggleBtn();\r\n\t\t\t\tif(btn) toggleIcon.call(btn);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar showMenu = typeof showMenu === 'boolean' ? showMenu : (typeof toggle_btn === 'boolean' ? toggle_btn : this.$sidebar.hasClass(responsive_min_class));\r\n\r\n\t\t\tif(showMenu) {\r\n\t\t\t\tthis.$sidebar.addClass(responsive_max_class).removeClass(responsive_min_class);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.$sidebar.removeClass(responsive_max_class).addClass(responsive_min_class);\r\n\t\t\t}\r\n\t\t\tthis.minimized = !showMenu;\r\n\r\n\r\n\t\t\tif( !toggle_btn || typeof toggle_btn !== 'object' ) {\r\n\t\t\t\ttoggle_btn = this.$sidebar.find('.sidebar-expand');\r\n\t\t\t\tif(toggle_btn.length == 0) toggle_btn = $('.sidebar-expand[data-target=\"#'+(this.$sidebar.attr('id')||'')+'\"]');\r\n\t\t\t\tif(toggle_btn.length != 0) toggle_btn = toggle_btn[0];\r\n\t\t\t\telse toggle_btn = null;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(toggle_btn) {\r\n\t\t\t\tvar icon = $(toggle_btn).find(ace.vars['.icon']), icon1, icon2;\r\n\t\t\t\tif(icon.length > 0) {\r\n\t\t\t\t\ticon1 = icon.attr('data-icon1');//the icon for expanded state\r\n\t\t\t\t\ticon2 = icon.attr('data-icon2');//the icon for collapsed state\r\n\r\n\t\t\t\t\tif(!showMenu) icon.removeClass(icon2).addClass(icon1);\r\n\t\t\t\t\telse icon.removeClass(icon1).addClass(icon2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(showMenu) self.$sidebar.trigger($.Event('mobileShow.ace.sidebar'));\r\n\t\t\telse self.$sidebar.trigger($.Event('mobileHide.ace.sidebar'));\r\n\t\t\t\r\n\t\t\t$(document).triggerHandler('settings.ace', ['sidebar_collapsed' , this.minimized]);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//some helper functions\r\n\t\t\r\n\t\t//determine if we have 4th mobile style responsive sidebar and we are in mobile view\r\n\t\tthis.is_collapsible = function() {\r\n\t\t\tvar toggle\r\n\t\t\treturn (this.$sidebar.hasClass('navbar-collapse'))\r\n\t\t\t&& ((toggle = $('.navbar-toggle[data-target=\"#'+(this.$sidebar.attr('id')||'')+'\"]').get(0)) != null)\r\n\t\t\t&&  toggle.scrollHeight > 0\r\n\t\t\t//sidebar is collapsible and collapse button is visible?\r\n\t\t}\r\n\t\t//determine if we are in mobile view\r\n\t\tthis.is_mobile_view = function() {\r\n\t\t\tvar toggle\r\n\t\t\treturn ((toggle = $('.menu-toggler[data-target=\"#'+(this.$sidebar.attr('id')||'')+'\"]').get(0)) != null)\r\n\t\t\t&&  toggle.scrollHeight > 0\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t\tvar submenu_working = false;\r\n\t\t//show submenu\r\n\t\tthis.show = function(sub, $duration, shouldWait) {\r\n\t\t\t//'shouldWait' indicates whether to wait for previous transition (submenu toggle) to be complete or not?\r\n\t\t\tshouldWait = (shouldWait !== false);\r\n\t\t\tif(shouldWait && submenu_working) return false;\r\n\t\t\t\t\t\r\n\t\t\tvar $sub = $(sub);\r\n\t\t\tvar event;\r\n\t\t\t$sub.trigger(event = $.Event('show.ace.submenu'))\r\n\t\t\tif (event.isDefaultPrevented()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(shouldWait) submenu_working = true;\r\n\r\n\r\n\t\t\t$duration = typeof $duration !== 'undefined' ? $duration : this.settings.duration;\r\n\t\t\t\r\n\t\t\t$sub.css({\r\n\t\t\t\theight: 0,\r\n\t\t\t\toverflow: 'hidden',\r\n\t\t\t\tdisplay: 'block'\r\n\t\t\t})\r\n\t\t\t.removeClass('nav-hide').addClass('nav-show')//only for window < @grid-float-breakpoint and .navbar-collapse.menu-min\r\n\t\t\t.parent().addClass('open');\r\n\t\t\t\r\n\t\t\tsub.scrollTop = 0;//this is for submenu_hover when sidebar is minimized and a submenu is scrollTop'ed using scrollbars ...\r\n\r\n\t\t\t\r\n\t\t\tvar complete = function(ev, trigger) {\r\n\t\t\t\tev && ev.stopPropagation();\r\n\t\t\t\t$sub\r\n\t\t\t\t.css({'transition-property': '', 'transition-duration': '', overflow:'', height: ''})\r\n\t\t\t\t//if(ace.vars['webkit']) ace.helper.redraw(sub);//little Chrome issue, force redraw ;)\r\n\r\n\t\t\t\tif(trigger !== false) $sub.trigger($.Event('shown.ace.submenu'))\r\n\t\t\t\t\r\n\t\t\t\tif(shouldWait) submenu_working = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar finalHeight = sub.scrollHeight;\r\n\r\n\t\t\tif($duration == 0 || finalHeight == 0 || !$.support.transition.end) {\r\n\t\t\t\t//(if duration is zero || element is hidden (scrollHeight == 0) || CSS3 transitions are not available)\r\n\t\t\t\tcomplete();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$sub\r\n\t\t\t\t.css({\r\n\t\t\t\t\t 'height': finalHeight,\r\n\t\t\t\t\t 'transition-property': 'height',\r\n\t\t\t\t\t 'transition-duration': ($duration/1000)+'s'\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.one($.support.transition.end, complete);\r\n\t\t\t\t\r\n\t\t\t\t//there is sometimes a glitch, so maybe retry\r\n\t\t\t\tif(ace.vars['android'] ) {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tcomplete(null, false);\r\n\t\t\t\t\t\tace.helper.redraw(sub);\r\n\t\t\t\t\t}, $duration + 20);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t }\r\n\t\t \r\n\t\t \r\n\t\t //hide submenu\r\n\t\t this.hide = function(sub, $duration, shouldWait) {\r\n\t\t\t//'shouldWait' indicates whether to wait for previous transition (submenu toggle) to be complete or not?\r\n\t\t\tshouldWait = (shouldWait !== false);\r\n\t\t\tif(shouldWait && submenu_working) return false;\r\n\t\t \r\n\t\t\t\r\n\t\t\tvar $sub = $(sub);\r\n\t\t\tvar event;\r\n\t\t\t$sub.trigger(event = $.Event('hide.ace.submenu'))\r\n\t\t\tif (event.isDefaultPrevented()) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(shouldWait) submenu_working = true;\r\n\t\t\t\r\n\r\n\t\t\t$duration = typeof $duration !== 'undefined' ? $duration : this.settings.duration;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tvar initialHeight = sub.scrollHeight;\r\n\t\t\t$sub.css({\r\n\t\t\t\theight: initialHeight,\r\n\t\t\t\toverflow: 'hidden',\r\n\t\t\t\tdisplay: 'block'\r\n\t\t\t})\r\n\t\t\t.parent().removeClass('open');\r\n\r\n\t\t\tsub.offsetHeight;\r\n\t\t\t//forces the \"sub\" to re-consider the new 'height' before transition\r\n\r\n\t\t\t\r\n\t\t\tvar complete = function(ev, trigger) {\r\n\t\t\t\tev && ev.stopPropagation();\r\n\t\t\t\t$sub\r\n\t\t\t\t.css({display: 'none', overflow:'', height: '', 'transition-property': '', 'transition-duration': ''})\r\n\t\t\t\t.removeClass('nav-show').addClass('nav-hide')//only for window < @grid-float-breakpoint and .navbar-collapse.menu-min\r\n\r\n\t\t\t\tif(trigger !== false) $sub.trigger($.Event('hidden.ace.submenu'))\r\n\t\t\t\t\r\n\t\t\t\tif(shouldWait) submenu_working = false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif( $duration == 0 || initialHeight == 0 || !$.support.transition.end) {\r\n\t\t\t\t//(if duration is zero || element is hidden (scrollHeight == 0) || CSS3 transitions are not available)\r\n\t\t\t\tcomplete();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$sub\r\n\t\t\t\t.css({\r\n\t\t\t\t\t 'height': 0,\r\n\t\t\t\t\t 'transition-property': 'height',\r\n\t\t\t\t\t 'transition-duration': ($duration/1000)+'s'\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.one($.support.transition.end, complete);\r\n\t\t\t\t\r\n\t\t\t\t//there is sometimes a glitch, so maybe retry\r\n\t\t\t\tif(ace.vars['android'] ) {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tcomplete(null, false);\r\n\t\t\t\t\t\tace.helper.redraw(sub);\r\n\t\t\t\t\t}, $duration + 20);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t }\r\n\r\n\t\t //toggle submenu\r\n\t\t this.toggle = function(sub, $duration) {\r\n\t\t\t$duration = $duration || self.settings.duration;\r\n\t\t \r\n\t\t\tif( sub.scrollHeight == 0 ) {//if an element is hidden scrollHeight becomes 0\r\n\t\t\t\tif( this.show(sub, $duration) ) return 1;\r\n\t\t\t} else {\r\n\t\t\t\tif( this.hide(sub, $duration) ) return -1;\r\n\t\t\t}\r\n\t\t\treturn 0;\r\n\t\t }\r\n\r\n\r\n\r\n\t\t//toggle mobile menu\r\n\t\tthis.mobileToggle = function(showMenu) {\r\n\t\t\tif(this.mobile_view) {\r\n\t\t\t\tif(this.mobile_style == 1 || this.mobile_style == 2) {\r\n\t\t\t\t\tthis.toggleMobile(typeof showMenu === 'object' ? showMenu : null, typeof showMenu === 'boolean' ? showMenu : null);\r\n\t\t\t\t}\r\n\t\t\t\telse if(this.mobile_style == 3) {\r\n\t\t\t\t\tthis.toggleResponsive(typeof showMenu === 'object' ? showMenu : null, typeof showMenu === 'boolean' ? showMenu : null);\r\n\t\t\t\t}\r\n\t\t\t\t//return true;\r\n\t\t\t}\r\n\t\t\telse if(this.collapsible) {\r\n\t\t\t\tthis.toggleCollapsible(typeof showMenu === 'object' ? showMenu : null, typeof showMenu === 'boolean' ? showMenu : null);\r\n\t\t\t\t//return true;\r\n\t\t\t}\r\n\r\n\t\t\t//return true;\r\n\t\t}\r\n\t\tthis.mobileShow = function() {\r\n\t\t\tthis.mobileToggle(true);\r\n\t\t}\r\n\t\tthis.mobileHide = function() {\r\n\t\t\tthis.mobileToggle(false);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tthis.toggleMobile = function(toggle_btn, showMenu) {\r\n\t\t\tif(!(this.mobile_style == 1 || this.mobile_style == 2)) return;\r\n\t\t\t\r\n\t\t\tvar showMenu = typeof showMenu === 'boolean' ? showMenu : (typeof toggle_btn === 'boolean' ? toggle_btn : !this.$sidebar.hasClass('display'));\r\n\t\t\t\r\n\t\t\r\n\t\t\tif( !toggle_btn || typeof toggle_btn !== 'object' ) {\r\n\t\t\t\ttoggle_btn = $('.menu-toggler[data-target=\"#'+(this.$sidebar.attr('id')||'')+'\"]');\r\n\t\t\t\tif(toggle_btn.length != 0) toggle_btn = toggle_btn[0];\r\n\t\t\t\telse toggle_btn = null;\r\n\t\t\t}\r\n\t\t\tif(showMenu) {\r\n\t\t\t\tthis.$sidebar.addClass('display');\r\n\t\t\t\tif(toggle_btn) $(toggle_btn).addClass('display');\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.$sidebar.removeClass('display');\r\n\t\t\t\tif(toggle_btn) $(toggle_btn).removeClass('display');\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(showMenu) self.$sidebar.trigger($.Event('mobileShow.ace.sidebar'));\r\n\t\t\telse self.$sidebar.trigger($.Event('mobileHide.ace.sidebar'));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tthis.toggleCollapsible = function(toggle_btn, showMenu) {\r\n\t\t\tif(this.mobile_style != 4) return;\r\n\t\t\t\r\n\t\t\tvar showMenu = typeof showMenu === 'boolean' ? showMenu : (typeof toggle_btn === 'boolean' ? toggle_btn : !this.$sidebar.hasClass('in'));\r\n\t\t\tif(showMenu) {\r\n\t\t\t\tthis.$sidebar.collapse('show');\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.$sidebar.removeClass('display');\r\n\t\t\t\tthis.$sidebar.collapse('hide');\r\n\t\t\t}\r\n\r\n\t\t\tif(showMenu) self.$sidebar.trigger($.Event('mobileShow.ace.sidebar'));\r\n\t\t\telse self.$sidebar.trigger($.Event('mobileHide.ace.sidebar'));\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t////////////////\r\n\t\t//private functions\r\n\t\t//sidebar vars\r\n\t\tvar minimized_menu_class  = 'menu-min';\r\n\t\tvar responsive_min_class  = 'responsive-min';\r\n\t\tvar responsive_max_class  = 'responsive-max';\r\n\t\tvar horizontal_menu_class = 'h-sidebar';\r\n\r\n\t\tvar sidebar_mobile_style = function() {\r\n\t\t\t//differnet mobile menu styles\r\n\t\t\tthis.mobile_style = 1;//default responsive mode with toggle button inside navbar\r\n\t\t\tif(this.$sidebar.hasClass('responsive') && !$('.menu-toggler[data-target=\"#'+this.$sidebar.attr('id')+'\"]').hasClass('navbar-toggle')) this.mobile_style = 2;//toggle button behind sidebar\r\n\t\t\t else if(this.$sidebar.hasClass(responsive_min_class)) this.mobile_style = 3;//minimized menu\r\n\t\t\t  else if(this.$sidebar.hasClass('navbar-collapse')) this.mobile_style = 4;//collapsible (bootstrap style)\r\n\t\t}\r\n\t\tsidebar_mobile_style.call(self);\r\n\t\t  \r\n\t\tfunction update_vars() {\r\n\t\t\tthis.mobile_view = this.mobile_style < 4 && this.is_mobile_view();\r\n\t\t\tthis.collapsible = !this.mobile_view && this.is_collapsible();\r\n\r\n\t\t\tthis.minimized = \r\n\t\t\t(!this.collapsible && this.$sidebar.hasClass(minimized_menu_class))\r\n\t\t\t ||\r\n\t\t\t(this.mobile_style == 3 && this.mobile_view && this.$sidebar.hasClass(responsive_min_class))\r\n\r\n\t\t\tthis.horizontal = !(this.mobile_view || this.collapsible) && this.$sidebar.hasClass(horizontal_menu_class)\r\n\t\t}\r\n\r\n\t\t//update some basic variables\r\n\t\t$(window).on('resize.sidebar.vars' , function(){\r\n\t\t\tupdate_vars.call(self);\r\n\t\t}).triggerHandler('resize.sidebar.vars')\r\n\t\t\r\n\t\t\r\n\t\t//toggling (show/hide) submenu elements\r\n\t\tthis.$sidebar.on(ace.click_event+'.ace.submenu', '.nav-list', function (ev) {\r\n\t\t\tvar nav_list = this;\r\n\r\n\t\t\t//check to see if we have clicked on an element which is inside a .dropdown-toggle element?!\r\n\t\t\t//if so, it means we should toggle a submenu\r\n\t\t\tvar link_element = $(ev.target).closest('a');\r\n\t\t\tif(!link_element || link_element.length == 0) return;//return if not clicked inside a link element\r\n\r\n\t\t\tvar minimized  = self.minimized && !self.collapsible;\r\n\t\t\t//if .sidebar is .navbar-collapse and in small device mode, then let minimized be uneffective\r\n\t\r\n\t\t\tif( !link_element.hasClass('dropdown-toggle') ) {//it doesn't have a submenu return\r\n\t\t\t\t//just one thing before we return\r\n\t\t\t\t//if sidebar is collapsed(minimized) and we click on a first level menu item\r\n\t\t\t\t//and the click is on the icon, not on the menu text then let's cancel event and cancel navigation\r\n\t\t\t\t//Good for touch devices, that when the icon is tapped to see the menu text, navigation is cancelled\r\n\t\t\t\t//navigation is only done when menu text is tapped\r\n\r\n\t\t\t\tif( ace.click_event == 'tap'\r\n\t\t\t\t\t&&\r\n\t\t\t\t\tminimized\r\n\t\t\t\t\t&&\r\n\t\t\t\t\tlink_element.get(0).parentNode.parentNode == nav_list )//only level-1 links\r\n\t\t\t\t{\r\n\t\t\t\t\tvar text = link_element.find('.menu-text').get(0);\r\n\t\t\t\t\tif( text != null && ev.target != text && !$.contains(text , ev.target) ) {//not clicking on the text or its children\r\n\t\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//ios safari only has a bit of a problem not navigating to link address when scrolling down\r\n\t\t\t\t//specify data-link attribute to ignore this\r\n\t\t\t\tif(ace.vars['ios_safari'] && link_element.attr('data-link') !== 'false') {\r\n\t\t\t\t\t//only ios safari has a bit of a problem not navigating to link address when scrolling down\r\n\t\t\t\t\t//please see issues section in documentation\r\n\t\t\t\t\tdocument.location = link_element.attr('href');\r\n\t\t\t\t\tev.preventDefault();\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tev.preventDefault();\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\n\t\t\tvar sub = link_element.siblings('.submenu').get(0);\r\n\t\t\tif(!sub) return false;\r\n\t\t\tvar $sub = $(sub);\r\n\r\n\t\t\tvar height_change = 0;//the amount of height change in .nav-list\r\n\r\n\t\t\tvar parent_ul = sub.parentNode.parentNode;\r\n\t\t\tif\r\n\t\t\t(\r\n\t\t\t\t( minimized && parent_ul == nav_list )\r\n\t\t\t\t || \r\n\t\t\t\t( ( $sub.parent().hasClass('hover') && $sub.css('position') == 'absolute' ) && !self.collapsible )\r\n\t\t\t)\r\n\t\t\t{\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\t\t\tvar sub_hidden = (sub.scrollHeight == 0)\r\n\r\n\t\t\t//if not open and visible, let's open it and make it visible\r\n\t\t\tif( sub_hidden && self.settings.hide_open_subs ) {//being shown now\r\n\t\t\t  $(parent_ul).find('> .open > .submenu').each(function() {\r\n\t\t\t\t//close all other open submenus except for the active one\r\n\t\t\t\tif(this != sub && !$(this.parentNode).hasClass('active')) {\r\n\t\t\t\t\theight_change -= this.scrollHeight;\r\n\t\t\t\t\tself.hide(this, self.settings.duration, false);\r\n\t\t\t\t}\r\n\t\t\t  })\r\n\t\t\t}\r\n\r\n\t\t\tif( sub_hidden ) {//being shown now\r\n\t\t\t\tself.show(sub, self.settings.duration);\r\n\t\t\t\t//if a submenu is being shown and another one previously started to hide, then we may need to update/hide scrollbars\r\n\t\t\t\t//but if no previous submenu is being hidden, then no need to check if we need to hide the scrollbars in advance\r\n\t\t\t\tif(height_change != 0) height_change += sub.scrollHeight;//we need new updated 'scrollHeight' here\r\n\t\t\t} else {\r\n\t\t\t\tself.hide(sub, self.settings.duration);\r\n\t\t\t\theight_change -= sub.scrollHeight;\r\n\t\t\t\t//== -1 means submenu is being hidden\r\n\t\t\t}\r\n\r\n\t\t\t//hide scrollbars if content is going to be small enough that scrollbars is not needed anymore\r\n\t\t\t//do this almost before submenu hiding begins\r\n\t\t\t//but when minimized submenu's toggle should have no effect\r\n\t\t\tif (height_change != 0) {\r\n\t\t\t\tif(self.$sidebar.attr('data-sidebar-scroll') == 'true' && !self.minimized) \r\n\t\t\t\t\tself.$sidebar.ace_sidebar_scroll('prehide', height_change)\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t}//end of Sidebar\r\n\t\r\n\r\n\t//sidebar events\r\n\t\r\n\t//menu-toggler\r\n\t$(document)\r\n\t.on(ace.click_event+'.ace.menu', '.menu-toggler', function(e){\r\n\t\tvar btn = $(this);\r\n\t\tvar sidebar = $(btn.attr('data-target'));\r\n\t\tif(sidebar.length == 0) return;\r\n\t\t\r\n\t\te.preventDefault();\r\n\t\t\t\t\r\n\t\t//sidebar.toggleClass('display');\r\n\t\t//btn.toggleClass('display');\r\n\t\t\r\n\t\tsidebar.ace_sidebar('mobileToggle', this);\r\n\t\t\r\n\t\tvar click_event = ace.click_event+'.ace.autohide';\r\n\t\tvar auto_hide = sidebar.attr('data-auto-hide') === 'true';\r\n\r\n\t\tif( btn.hasClass('display') ) {\r\n\t\t\t//hide menu if clicked outside of it!\r\n\t\t\tif(auto_hide) {\r\n\t\t\t\t$(document).on(click_event, function(ev) {\r\n\t\t\t\t\tif( sidebar.get(0) == ev.target || $.contains(sidebar.get(0), ev.target) ) {\r\n\t\t\t\t\t\tev.stopPropagation();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsidebar.ace_sidebar('mobileToggle', this, false);\r\n\t\t\t\t\t$(document).off(click_event);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif(sidebar.attr('data-sidebar-scroll') == 'true') sidebar.ace_sidebar_scroll('reset');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif(auto_hide) $(document).off(click_event);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t})\r\n\t//sidebar collapse/expand button\r\n\t.on(ace.click_event+'.ace.menu', '.sidebar-collapse', function(e){\r\n\t\t\r\n\t\tvar target = $(this).attr('data-target'), $sidebar = null;\r\n\t\tif(target) $sidebar = $(target);\r\n\t\tif($sidebar == null || $sidebar.length == 0) $sidebar = $(this).closest('.sidebar');\r\n\t\tif($sidebar.length == 0) return;\r\n\r\n\t\te.preventDefault();\r\n\t\t$sidebar.ace_sidebar('toggleMenu', this);\r\n\t})\r\n\t//this button is used in `mobile_style = 3` responsive menu style to expand minimized sidebar\r\n\t.on(ace.click_event+'.ace.menu', '.sidebar-expand', function(e){\r\n\t\tvar target = $(this).attr('data-target'), $sidebar = null;\r\n\t\tif(target) $sidebar = $(target);\r\n\t\tif($sidebar == null || $sidebar.length == 0) $sidebar = $(this).closest('.sidebar');\r\n\t\tif($sidebar.length == 0) return;\t\r\n\t\r\n\t\tvar btn = this;\r\n\t\te.preventDefault();\r\n\t\t$sidebar.ace_sidebar('toggleResponsive', this);\r\n\t\t\r\n\t\tvar click_event = ace.click_event+'.ace.autohide';\r\n\t\tif($sidebar.attr('data-auto-hide') === 'true') {\r\n\t\t\tif( $sidebar.hasClass(responsive_max_class) ) {\r\n\t\t\t\t$(document).on(click_event, function(ev) {\r\n\t\t\t\t\tif( $sidebar.get(0) == ev.target || $.contains($sidebar.get(0), ev.target) ) {\r\n\t\t\t\t\t\tev.stopPropagation();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$sidebar.ace_sidebar('toggleResponsive', btn);\r\n\t\t\t\t\t$(document).off(click_event);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$(document).off(click_event);\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t\r\n\t$.fn.ace_sidebar = function (option, value, value2) {\r\n\t\tvar method_call;\r\n\r\n\t\tvar $set = this.each(function () {\r\n\t\t\tvar $this = $(this);\r\n\t\t\tvar data = $this.data('ace_sidebar');\r\n\t\t\tvar options = typeof option === 'object' && option;\r\n\r\n\t\t\tif (!data) $this.data('ace_sidebar', (data = new Sidebar(this, options)));\r\n\t\t\tif (typeof option === 'string' && typeof data[option] === 'function') {\r\n\t\t\t\tif(value instanceof Array) method_call = data[option].apply(data, value);\r\n\t\t\t\telse if(value2 !== undefined) method_call = data[option](value, value2);\r\n\t\t\t\telse method_call = data[option](value);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn (method_call === undefined) ? $set : method_call;\r\n\t};\r\n\t\r\n\t\r\n\t$.fn.ace_sidebar.defaults = {\r\n\t\t'duration': 300,\r\n\t\t'hide_open_subs': true\r\n    }\r\n\r\n\r\n})(window.jQuery);\r\n"],"sourceRoot":"/source/"}