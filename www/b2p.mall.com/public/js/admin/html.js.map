{"version":3,"sources":["html.js"],"names":[],"mappingsfile":"html.js","sourcesContent":["/**\n * HTML patterns\n *\n * @author Craig Campbell\n * @version 1.0.9\n */\nRainbow.extend('html', [\n    {\n        'name': 'source.php.embedded',\n        'matches': {\n            2: {\n                'language': 'php'\n            }\n        },\n        'pattern': /&lt;\\?=?(?!xml)(php)?([\\s\\S]*?)(\\?&gt;)/gm\n    },\n    {\n        'name': 'source.css.embedded',\n        'matches': {\n            1: {\n                'matches': {\n                    1: 'support.tag.style',\n                    2: [\n                        {\n                            'name': 'entity.tag.style',\n                            'pattern': /^style/g\n                        },\n                        {\n                            'name': 'string',\n                            'pattern': /('|\")(.*?)(\\1)/g\n                        },\n                        {\n                            'name': 'entity.tag.style.attribute',\n                            'pattern': /(\\w+)/g\n                        }\n                    ],\n                    3: 'support.tag.style'\n                },\n                'pattern': /(&lt;\\/?)(style.*?)(&gt;)/g\n            },\n            2: {\n                'language': 'css'\n            },\n            3: 'support.tag.style',\n            4: 'entity.tag.style',\n            5: 'support.tag.style'\n        },\n        'pattern': /(&lt;style.*?&gt;)([\\s\\S]*?)(&lt;\\/)(style)(&gt;)/gm\n    },\n    {\n        'name': 'source.js.embedded',\n        'matches': {\n            1: {\n                'matches': {\n                    1: 'support.tag.script',\n                    2: [\n                        {\n                            'name': 'entity.tag.script',\n                            'pattern': /^script/g\n                        },\n\n                        {\n                            'name': 'string',\n                            'pattern': /('|\")(.*?)(\\1)/g\n                        },\n                        {\n                            'name': 'entity.tag.script.attribute',\n                            'pattern': /(\\w+)/g\n                        }\n                    ],\n                    3: 'support.tag.script'\n                },\n                'pattern': /(&lt;\\/?)(script.*?)(&gt;)/g\n            },\n            2: {\n                'language': 'javascript'\n            },\n            3: 'support.tag.script',\n            4: 'entity.tag.script',\n            5: 'support.tag.script'\n        },\n        'pattern': /(&lt;script(?! src).*?&gt;)([\\s\\S]*?)(&lt;\\/)(script)(&gt;)/gm\n    },\n    {\n        'name': 'comment.html',\n        'pattern': /&lt;\\!--[\\S\\s]*?--&gt;/g\n    },\n    {\n        'matches': {\n            1: 'support.tag.open',\n            2: 'support.tag.close'\n        },\n        'pattern': /(&lt;)|(\\/?\\??&gt;)/g\n    },\n    {\n        'name': 'support.tag',\n        'matches': {\n            1: 'support.tag',\n            2: 'support.tag.special',\n            3: 'support.tag-name'\n        },\n        'pattern': /(&lt;\\??)(\\/|\\!?)(\\w+)/g\n    },\n    {\n        'matches': {\n            1: 'support.attribute'\n        },\n        'pattern': /([a-z-]+)(?=\\=)/gi\n    },\n    {\n        'matches': {\n            1: 'support.operator',\n            2: 'string.quote',\n            3: 'string.value',\n            4: 'string.quote'\n        },\n        'pattern': /(=)('|\")(.*?)(\\2)/g\n    },\n    {\n        'matches': {\n            1: 'support.operator',\n            2: 'support.value'\n        },\n        'pattern': /(=)([a-zA-Z\\-0-9]*)\\b/g\n    },\n    {\n        'matches': {\n            1: 'support.attribute'\n        },\n        'pattern': /\\s(\\w+)(?=\\s|&gt;)(?![\\s\\S]*&lt;)/g\n    }\n], true);\n"],"sourceRoot":"/source/"}