{"version":3,"sources":["javascript.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"javascript.js","sourcesContent":["/**\n * Javascript patterns\n *\n * @author Craig Campbell\n * @version 1.0.9\n */\nRainbow.extend('javascript', [\n\n    /**\n     * matches $. or $(\n     */\n    {\n        'name': 'selector',\n        'pattern': /(\\s|^)\\$(?=\\.|\\()/g\n    },\n    {\n        'name': 'support',\n        'pattern': /\\b(window|document)\\b/g\n    },\n    {\n        'matches': {\n            1: 'support.property'\n        },\n        'pattern': /\\.(length|node(Name|Value))\\b/g\n    },\n    {\n        'matches': {\n            1: 'support.function'\n        },\n        'pattern': /(setTimeout|setInterval)(?=\\()/g\n\n    },\n    {\n        'matches': {\n            1: 'support.method'\n        },\n        'pattern': /\\.(getAttribute|push|getElementById|getElementsByClassName|log|setTimeout|setInterval)(?=\\()/g\n    },\n\n    /**\n     * matches any escaped characters inside of a js regex pattern\n     *\n     * @see https://github.com/ccampbell/rainbow/issues/22\n     *\n     * this was causing single line comments to fail so it now makes sure\n     * the opening / is not directly followed by a *\n     *\n     * @todo check that there is valid regex in match group 1\n     */\n    {\n        'name': 'string.regexp',\n        'matches': {\n            1: 'string.regexp.open',\n            2: {\n                'name': 'constant.regexp.escape',\n                'pattern': /\\\\(.){1}/g\n            },\n            3: 'string.regexp.close',\n            4: 'string.regexp.modifier'\n        },\n        'pattern': /(\\/)(?!\\*)(.+)(\\/)([igm]{0,3})/g\n    },\n\n    /**\n     * matches runtime function declarations\n     */\n    {\n        'matches': {\n            1: 'storage',\n            3: 'entity.function'\n        },\n        'pattern': /(var)?(\\s|^)(\\S*)(?=\\s?=\\s?function\\()/g\n    },\n\n    /**\n     * matches constructor call\n     */\n    {\n        'matches': {\n            1: 'keyword',\n            2: 'entity.function'\n        },\n        'pattern': /(new)\\s+(.*)(?=\\()/g\n    },\n\n    /**\n     * matches any function call in the style functionName: function()\n     */\n    {\n        'name': 'entity.function',\n        'pattern': /(\\w+)(?=:\\s{0,}function)/g\n    }\n]);\n"],"sourceRoot":"/source/"}