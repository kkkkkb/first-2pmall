{"version":3,"sources":["javascript.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"javascript.js","sourcesContent":["/**\r\n * Javascript patterns\r\n *\r\n * @author Craig Campbell\r\n * @version 1.0.9\r\n */\r\nRainbow.extend('javascript', [\r\n\r\n    /**\r\n     * matches $. or $(\r\n     */\r\n    {\r\n        'name': 'selector',\r\n        'pattern': /(\\s|^)\\$(?=\\.|\\()/g\r\n    },\r\n    {\r\n        'name': 'support',\r\n        'pattern': /\\b(window|document)\\b/g\r\n    },\r\n    {\r\n        'matches': {\r\n            1: 'support.property'\r\n        },\r\n        'pattern': /\\.(length|node(Name|Value))\\b/g\r\n    },\r\n    {\r\n        'matches': {\r\n            1: 'support.function'\r\n        },\r\n        'pattern': /(setTimeout|setInterval)(?=\\()/g\r\n\r\n    },\r\n    {\r\n        'matches': {\r\n            1: 'support.method'\r\n        },\r\n        'pattern': /\\.(getAttribute|push|getElementById|getElementsByClassName|log|setTimeout|setInterval)(?=\\()/g\r\n    },\r\n\r\n    /**\r\n     * matches any escaped characters inside of a js regex pattern\r\n     *\r\n     * @see https://github.com/ccampbell/rainbow/issues/22\r\n     *\r\n     * this was causing single line comments to fail so it now makes sure\r\n     * the opening / is not directly followed by a *\r\n     *\r\n     * @todo check that there is valid regex in match group 1\r\n     */\r\n    {\r\n        'name': 'string.regexp',\r\n        'matches': {\r\n            1: 'string.regexp.open',\r\n            2: {\r\n                'name': 'constant.regexp.escape',\r\n                'pattern': /\\\\(.){1}/g\r\n            },\r\n            3: 'string.regexp.close',\r\n            4: 'string.regexp.modifier'\r\n        },\r\n        'pattern': /(\\/)(?!\\*)(.+)(\\/)([igm]{0,3})/g\r\n    },\r\n\r\n    /**\r\n     * matches runtime function declarations\r\n     */\r\n    {\r\n        'matches': {\r\n            1: 'storage',\r\n            3: 'entity.function'\r\n        },\r\n        'pattern': /(var)?(\\s|^)(\\S*)(?=\\s?=\\s?function\\()/g\r\n    },\r\n\r\n    /**\r\n     * matches constructor call\r\n     */\r\n    {\r\n        'matches': {\r\n            1: 'keyword',\r\n            2: 'entity.function'\r\n        },\r\n        'pattern': /(new)\\s+(.*)(?=\\()/g\r\n    },\r\n\r\n    /**\r\n     * matches any function call in the style functionName: function()\r\n     */\r\n    {\r\n        'name': 'entity.function',\r\n        'pattern': /(\\w+)(?=:\\s{0,}function)/g\r\n    }\r\n]);\r\n"],"sourceRoot":"/source/"}