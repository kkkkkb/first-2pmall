{"version":3,"sources":["jquery.easypiechart.js"],"names":[],"mappingsfile":"jquery.easypiechart.js","sourcesContent":["/**!\r\n * easy-pie-chart\r\n * Lightweight plugin to render simple, animated and retina optimized pie charts\r\n *\r\n * @license \r\n * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)\r\n * @version 2.1.7\r\n **/\r\n\r\n(function (root, factory) {\r\n  if (typeof define === 'function' && define.amd) {\r\n    // AMD. Register as an anonymous module unless amdModuleId is set\r\n    define([\"jquery\"], function (a0) {\r\n      return (factory(a0));\r\n    });\r\n  } else if (typeof exports === 'object') {\r\n    // Node. Does not work with strict CommonJS, but\r\n    // only CommonJS-like environments that support module.exports,\r\n    // like Node.\r\n    module.exports = factory(require(\"jquery\"));\r\n  } else {\r\n    factory(jQuery);\r\n  }\r\n}(this, function ($) {\r\n\r\n/**\r\n * Renderer to render the chart on a canvas object\r\n * @param {DOMElement} el      DOM element to host the canvas (root of the plugin)\r\n * @param {object}     options options object of the plugin\r\n */\r\nvar CanvasRenderer = function(el, options) {\r\n\tvar cachedBackground;\r\n\tvar canvas = document.createElement('canvas');\r\n\r\n\tel.appendChild(canvas);\r\n\r\n\tif (typeof(G_vmlCanvasManager) === 'object') {\r\n\t\tG_vmlCanvasManager.initElement(canvas);\r\n\t}\r\n\r\n\tvar ctx = canvas.getContext('2d');\r\n\r\n\tcanvas.width = canvas.height = options.size;\r\n\r\n\t// canvas on retina devices\r\n\tvar scaleBy = 1;\r\n\tif (window.devicePixelRatio > 1) {\r\n\t\tscaleBy = window.devicePixelRatio;\r\n\t\tcanvas.style.width = canvas.style.height = [options.size, 'px'].join('');\r\n\t\tcanvas.width = canvas.height = options.size * scaleBy;\r\n\t\tctx.scale(scaleBy, scaleBy);\r\n\t}\r\n\r\n\t// move 0,0 coordinates to the center\r\n\tctx.translate(options.size / 2, options.size / 2);\r\n\r\n\t// rotate canvas -90deg\r\n\tctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);\r\n\r\n\tvar radius = (options.size - options.lineWidth) / 2;\r\n\tif (options.scaleColor && options.scaleLength) {\r\n\t\tradius -= options.scaleLength + 2; // 2 is the distance between scale and bar\r\n\t}\r\n\r\n\t// IE polyfill for Date\r\n\tDate.now = Date.now || function() {\r\n\t\treturn +(new Date());\r\n\t};\r\n\r\n\t/**\r\n\t * Draw a circle around the center of the canvas\r\n\t * @param {strong} color     Valid CSS color string\r\n\t * @param {number} lineWidth Width of the line in px\r\n\t * @param {number} percent   Percentage to draw (float between -1 and 1)\r\n\t */\r\n\tvar drawCircle = function(color, lineWidth, percent) {\r\n\t\tpercent = Math.min(Math.max(-1, percent || 0), 1);\r\n\t\tvar isNegative = percent <= 0 ? true : false;\r\n\r\n\t\tctx.beginPath();\r\n\t\tctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);\r\n\r\n\t\tctx.strokeStyle = color;\r\n\t\tctx.lineWidth = lineWidth;\r\n\r\n\t\tctx.stroke();\r\n\t};\r\n\r\n\t/**\r\n\t * Draw the scale of the chart\r\n\t */\r\n\tvar drawScale = function() {\r\n\t\tvar offset;\r\n\t\tvar length;\r\n\r\n\t\tctx.lineWidth = 1;\r\n\t\tctx.fillStyle = options.scaleColor;\r\n\r\n\t\tctx.save();\r\n\t\tfor (var i = 24; i > 0; --i) {\r\n\t\t\tif (i % 6 === 0) {\r\n\t\t\t\tlength = options.scaleLength;\r\n\t\t\t\toffset = 0;\r\n\t\t\t} else {\r\n\t\t\t\tlength = options.scaleLength * 0.6;\r\n\t\t\t\toffset = options.scaleLength - length;\r\n\t\t\t}\r\n\t\t\tctx.fillRect(-options.size/2 + offset, 0, length, 1);\r\n\t\t\tctx.rotate(Math.PI / 12);\r\n\t\t}\r\n\t\tctx.restore();\r\n\t};\r\n\r\n\t/**\r\n\t * Request animation frame wrapper with polyfill\r\n\t * @return {function} Request animation frame method or timeout fallback\r\n\t */\r\n\tvar reqAnimationFrame = (function() {\r\n\t\treturn  window.requestAnimationFrame ||\r\n\t\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\t\twindow.mozRequestAnimationFrame ||\r\n\t\t\t\tfunction(callback) {\r\n\t\t\t\t\twindow.setTimeout(callback, 1000 / 60);\r\n\t\t\t\t};\r\n\t}());\r\n\r\n\t/**\r\n\t * Draw the background of the plugin including the scale and the track\r\n\t */\r\n\tvar drawBackground = function() {\r\n\t\tif(options.scaleColor) drawScale();\r\n\t\tif(options.trackColor) drawCircle(options.trackColor, options.trackWidth || options.lineWidth, 1);\r\n\t};\r\n\r\n  /**\r\n    * Canvas accessor\r\n   */\r\n  this.getCanvas = function() {\r\n    return canvas;\r\n  };\r\n\r\n  /**\r\n    * Canvas 2D context 'ctx' accessor\r\n   */\r\n  this.getCtx = function() {\r\n    return ctx;\r\n  };\r\n\r\n\t/**\r\n\t * Clear the complete canvas\r\n\t */\r\n\tthis.clear = function() {\r\n\t\tctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);\r\n\t};\r\n\r\n\t/**\r\n\t * Draw the complete chart\r\n\t * @param {number} percent Percent shown by the chart between -100 and 100\r\n\t */\r\n\tthis.draw = function(percent) {\r\n\t\t// do we need to render a background\r\n\t\tif (!!options.scaleColor || !!options.trackColor) {\r\n\t\t\t// getImageData and putImageData are supported\r\n\t\t\tif (ctx.getImageData && ctx.putImageData) {\r\n\t\t\t\tif (!cachedBackground) {\r\n\t\t\t\t\tdrawBackground();\r\n\t\t\t\t\tcachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tctx.putImageData(cachedBackground, 0, 0);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.clear();\r\n\t\t\t\tdrawBackground();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.clear();\r\n\t\t}\r\n\r\n\t\tctx.lineCap = options.lineCap;\r\n\r\n\t\t// if barcolor is a function execute it and pass the percent as a value\r\n\t\tvar color;\r\n\t\tif (typeof(options.barColor) === 'function') {\r\n\t\t\tcolor = options.barColor(percent);\r\n\t\t} else {\r\n\t\t\tcolor = options.barColor;\r\n\t\t}\r\n\r\n\t\t// draw bar\r\n\t\tdrawCircle(color, options.lineWidth, percent / 100);\r\n\t}.bind(this);\r\n\r\n\t/**\r\n\t * Animate from some percent to some other percentage\r\n\t * @param {number} from Starting percentage\r\n\t * @param {number} to   Final percentage\r\n\t */\r\n\tthis.animate = function(from, to) {\r\n\t\tvar startTime = Date.now();\r\n\t\toptions.onStart(from, to);\r\n\t\tvar animation = function() {\r\n\t\t\tvar process = Math.min(Date.now() - startTime, options.animate.duration);\r\n\t\t\tvar currentValue = options.easing(this, process, from, to - from, options.animate.duration);\r\n\t\t\tthis.draw(currentValue);\r\n\t\t\toptions.onStep(from, to, currentValue);\r\n\t\t\tif (process >= options.animate.duration) {\r\n\t\t\t\toptions.onStop(from, to);\r\n\t\t\t} else {\r\n\t\t\t\treqAnimationFrame(animation);\r\n\t\t\t}\r\n\t\t}.bind(this);\r\n\r\n\t\treqAnimationFrame(animation);\r\n\t}.bind(this);\r\n};\r\n\r\nvar EasyPieChart = function(el, opts) {\r\n\tvar defaultOptions = {\r\n\t\tbarColor: '#ef1e25',\r\n\t\ttrackColor: '#f9f9f9',\r\n\t\tscaleColor: '#dfe0e0',\r\n\t\tscaleLength: 5,\r\n\t\tlineCap: 'round',\r\n\t\tlineWidth: 3,\r\n\t\ttrackWidth: undefined,\r\n\t\tsize: 110,\r\n\t\trotate: 0,\r\n\t\tanimate: {\r\n\t\t\tduration: 1000,\r\n\t\t\tenabled: true\r\n\t\t},\r\n\t\teasing: function (x, t, b, c, d) { // more can be found here: http://gsgd.co.uk/sandbox/jquery/easing/\r\n\t\t\tt = t / (d/2);\r\n\t\t\tif (t < 1) {\r\n\t\t\t\treturn c / 2 * t * t + b;\r\n\t\t\t}\r\n\t\t\treturn -c/2 * ((--t)*(t-2) - 1) + b;\r\n\t\t},\r\n\t\tonStart: function(from, to) {\r\n\t\t\treturn;\r\n\t\t},\r\n\t\tonStep: function(from, to, currentValue) {\r\n\t\t\treturn;\r\n\t\t},\r\n\t\tonStop: function(from, to) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\t// detect present renderer\r\n\tif (typeof(CanvasRenderer) !== 'undefined') {\r\n\t\tdefaultOptions.renderer = CanvasRenderer;\r\n\t} else if (typeof(SVGRenderer) !== 'undefined') {\r\n\t\tdefaultOptions.renderer = SVGRenderer;\r\n\t} else {\r\n\t\tthrow new Error('Please load either the SVG- or the CanvasRenderer');\r\n\t}\r\n\r\n\tvar options = {};\r\n\tvar currentValue = 0;\r\n\r\n\t/**\r\n\t * Initialize the plugin by creating the options object and initialize rendering\r\n\t */\r\n\tvar init = function() {\r\n\t\tthis.el = el;\r\n\t\tthis.options = options;\r\n\r\n\t\t// merge user options into default options\r\n\t\tfor (var i in defaultOptions) {\r\n\t\t\tif (defaultOptions.hasOwnProperty(i)) {\r\n\t\t\t\toptions[i] = opts && typeof(opts[i]) !== 'undefined' ? opts[i] : defaultOptions[i];\r\n\t\t\t\tif (typeof(options[i]) === 'function') {\r\n\t\t\t\t\toptions[i] = options[i].bind(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// check for jQuery easing\r\n\t\tif (typeof(options.easing) === 'string' && typeof(jQuery) !== 'undefined' && jQuery.isFunction(jQuery.easing[options.easing])) {\r\n\t\t\toptions.easing = jQuery.easing[options.easing];\r\n\t\t} else {\r\n\t\t\toptions.easing = defaultOptions.easing;\r\n\t\t}\r\n\r\n\t\t// process earlier animate option to avoid bc breaks\r\n\t\tif (typeof(options.animate) === 'number') {\r\n\t\t\toptions.animate = {\r\n\t\t\t\tduration: options.animate,\r\n\t\t\t\tenabled: true\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (typeof(options.animate) === 'boolean' && !options.animate) {\r\n\t\t\toptions.animate = {\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\tenabled: options.animate\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\t// create renderer\r\n\t\tthis.renderer = new options.renderer(el, options);\r\n\r\n\t\t// initial draw\r\n\t\tthis.renderer.draw(currentValue);\r\n\r\n\t\t// initial update\r\n\t\tif (el.dataset && el.dataset.percent) {\r\n\t\t\tthis.update(parseFloat(el.dataset.percent));\r\n\t\t} else if (el.getAttribute && el.getAttribute('data-percent')) {\r\n\t\t\tthis.update(parseFloat(el.getAttribute('data-percent')));\r\n\t\t}\r\n\t\t\r\n\t\tel.style['width'] = el.style['height'] = options.size + 'px';//ACE\r\n\t\tel.style['lineHeight'] = (options.size - 1) + 'px';//ACE\r\n\t}.bind(this);\r\n\r\n\t/**\r\n\t * Update the value of the chart\r\n\t * @param  {number} newValue Number between 0 and 100\r\n\t * @return {object}          Instance of the plugin for method chaining\r\n\t */\r\n\tthis.update = function(newValue) {\r\n\t\tnewValue = parseFloat(newValue);\r\n\t\tif (options.animate.enabled) {\r\n\t\t\tthis.renderer.animate(currentValue, newValue);\r\n\t\t} else {\r\n\t\t\tthis.renderer.draw(newValue);\r\n\t\t}\r\n\t\tcurrentValue = newValue;\r\n\t\treturn this;\r\n\t}.bind(this);\r\n\r\n\t/**\r\n\t * Disable animation\r\n\t * @return {object} Instance of the plugin for method chaining\r\n\t */\r\n\tthis.disableAnimation = function() {\r\n\t\toptions.animate.enabled = false;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * Enable animation\r\n\t * @return {object} Instance of the plugin for method chaining\r\n\t */\r\n\tthis.enableAnimation = function() {\r\n\t\toptions.animate.enabled = true;\r\n\t\treturn this;\r\n\t};\r\n\r\n\tinit();\r\n};\r\n\r\n$.fn.easyPieChart = function(options) {\r\n\treturn this.each(function() {\r\n\t\tvar instanceOptions;\r\n\r\n\t\tif (!$.data(this, 'easyPieChart')) {\r\n\t\t\tinstanceOptions = $.extend({}, options, $(this).data());\r\n\t\t\t$.data(this, 'easyPieChart', new EasyPieChart(this, instanceOptions));\r\n\t\t}\r\n\t});\r\n};\r\n\r\n\r\n}));"],"sourceRoot":"/source/"}