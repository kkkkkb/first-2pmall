{"version":3,"sources":["ace.onpage-help.js"],"names":[],"mappingsfile":"ace.onpage-help.js","sourcesContent":["jQuery(function($) {\r\n\tvar help = null;//Onpage_Help instance\r\n\r\n\t//for ace demo pages, we temporarily disable fixed navbar, etc ... when help is enabled\r\n\t//because when an element is fixed, its highlighted help section should also become fixed!\r\n\tvar before_enable_help = function() {\r\n\t\t$('#btn-scroll-up').css('z-index', 1000000);//bring btn-scroll-up  higher , to be over our help area\r\n\r\n\t\t//save our current state of navbar, sidebar and breadcrumbs before enabling help\r\n\t\tace.settings.saveState('navbar', 'class');\r\n\t\tace.settings.saveState('sidebar', 'class');\r\n\t\tace.settings.saveState('breadcrumbs', 'class');\r\n\t\t\r\n\t\t//now disable fixed navbar, which automatically disabled fixes sidebar and breadcrumbs\r\n\t\ttry {\r\n\t\t\tace.settingFunction.navbar_fixed(null, false , false);\r\n\t\t} catch(ex) {}\r\n\t}\r\n\tvar after_disable_help = function() {\r\n\t\t$('#btn-scroll-up').css('z-index', '');\r\n\r\n\t\t//restore fixed state of navbar, sidebar, etc\r\n\t\tace.settings.loadState('navbar', 'class');\r\n\t\tace.settings.loadState('sidebar', 'class');\r\n\t\tace.settings.loadState('breadcrumbs', 'class');\r\n\t}\r\n\t\r\n\tvar get_file_url = function(url, language) {\r\n\t\t//function that return the real path to a file which is being loaded\r\n\t\treturn this.settings.base + '/' + url;\r\n\t}\r\n\tvar get_section_url = function(section_name) {\r\n\t\t//according to a section_name such as `basics/navbar.toggle` return the file url which contains help content\r\n\t\tsection_name = section_name || '';\r\n\r\n\t\t//for example convert `basic/navbar.layout.brand` to `basic/navbar`\r\n\t\t//because 'layout.brand' section is inside `basic/navbar.html` file\r\n\t\tvar url = section_name.replace(/\\..*$/g, '');\r\n\r\n\t\tvar parts = url.split('/');\r\n\t\tif(parts.length == 1) {\r\n\t\t\t//for example convert `changes` to `changes/index.html`\r\n\t\t\tif(url.length == 0) url = 'intro';//or convert `empty string` to `intro/index.html`\r\n\t\t\turl = url + '/index.html';\r\n\t\t}\r\n\t\telse if(parts.length > 1) {\r\n\t\t\t//for example convert `basics/navbar.layout` to `basics/navbar.html`\r\n\t\t\turl = url + '.html';\r\n\t\t}\r\n\t\treturn this.settings.base + '/docs/sections/' + url;\r\n\t}\r\n\tvar get_img_url = function(src) {\r\n\t\treturn this.settings.base + '/docs/' +src;\r\n\t}\r\n\r\n\t/**\r\n\tvar code_highlight = function(e, language) {\r\n\t\t//'this' refers to 'Onpage_Help' object invoking this function\r\n\t\tif(typeof e === 'string') {\r\n\t\t\tif(typeof language === 'string') {\r\n\t\t\t\t//called when a file (html,css,etc) is loaded\r\n\t\t\t\t//'e' is a piece of code\r\n\t\t\t\t//maybe highlight the syntax it according to `language` and return result\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//called before new help content is being displayed\r\n\t\t\t\t//'e' is a string which may contain <pre>...</pre> code sections\r\n\t\t\t\t//which you may want to highlight the code, or for example convert them < to &lt; and > to &gt;\r\n\t\t\t\t//and return the result\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if(typeof e === 'object') {\r\n\t\t\t//called when new help content is displayed\r\n\t\t\t//'e' is an html element which may have \"pre\" children that you can syntax-highlight\r\n\t\t}\r\n\t}\r\n\t*/\r\n\r\n\r\n\tfunction startHelp() {\r\n\t\tif(help !== null) return;//already created?\r\n\r\n\t\thelp = new Onpage_Help({\r\n\t\t\t'include_all': false,\r\n\t\t\t'base': ace.vars['base'] || '../..',\r\n\t\t\t'file_url': get_file_url,\r\n\t\t\t'section_url': get_section_url,\r\n\t\t\t\r\n\t\t\t'img_url': get_img_url,\r\n\t\t\t\r\n\t\t\t'before_enable': before_enable_help,\r\n\t\t\t'after_disable': after_disable_help\r\n\t\t\t\r\n\t\t\t//,'code_highlight': code_highlight\r\n\t\t})\r\n\r\n\t\t\r\n\t\t\r\n\t\tvar help_container = $('#onpage-help-container');\r\n\t\t//add a custom button to enable/disable help\r\n\t\thelp_container.append('<div class=\"ace-settings-container onpage-help-toggle-container\">\\\r\n\t\t\t<div id=\"onpage-help-toggle-btn\" class=\"btn btn-app btn-xs btn-info ace-settings-btn onpage-help-toggle-btn\">\\\r\n\t\t\t\t<i class=\"onpage-help-toggle-text ace-icon fa fa-question bigger-150\"></i>\\\r\n\t\t\t</div>\\\r\n\t\t</div>');\r\n\r\n\t\t$('#onpage-help-toggle-btn').on('click', function(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\ttoggleHelp();\r\n\t\t})\r\n\t\t\r\n\t\t//add .container class to help container div when our content is put inside a \".container\"\r\n\t\t$(document).on('settings.ace.help', function(ev, event_name, fixed) {\r\n\t\t   if(event_name == 'main_container_fixed') {\r\n\t\t\t  if(fixed) help_container.addClass('container');\r\n\t\t\t  else help_container.removeClass('container');\r\n\t\t   }\r\n\t\t}).triggerHandler('settings.ace.help', ['main_container_fixed', $('.main-container').hasClass('container')])\r\n\t\t\r\n\t\t//in ajax mode when a content is loaded via ajax, we may want to update help sections\r\n\t\t$(document).on('ajaxloadcomplete.ace.help', function() {\r\n\t\t\thelp.update_sections();\r\n\t\t});\r\n\t}\r\n\t\r\n\tfunction toggleHelp() {\r\n\t\thelp.toggle();\r\n\t\t\r\n\t\tvar toggle_btn = $('#onpage-help-toggle-btn');\r\n\t\ttoggle_btn.find('.onpage-help-toggle-text').removeClass('onpage-help-toggle-text');\r\n\t\ttoggle_btn.toggleClass('btn-grey btn-info').parent().toggleClass('active');\r\n\t}\r\n\r\n\r\n\t$(window).on('hashchange.start_help', function(e) {\r\n\t\tif(help == null && window.location.hash == '#help') {\r\n\t\t\tstartHelp();\r\n\r\n\t\t\t//add #help tag to sidebar links to enable help when navigating to the page\r\n\t\t\t$(document).on('click.start_help', '.sidebar .nav-list a', function() {\r\n\t\t\t\tvar href = $(this).attr('href');\r\n\t\t\t\tif( !href.match(/\\#help$/) ) $(this).attr('href', href+'#help');\r\n\t\t\t});\r\n\t\t}\r\n\t}).triggerHandler('hashchange.start_help');\r\n\r\n\r\n\t//some buttons inside demo pages that launch a help section\r\n\t$(document).on('click', '.btn-display-help', function(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tstartHelp();\r\n\t\tif( !help.is_active() ) toggleHelp();\r\n\r\n\t\tvar section = $(this).attr('href');\r\n\t\thelp.show_section_help(section);\r\n\t});\r\n});\r\n"],"sourceRoot":"/source/"}